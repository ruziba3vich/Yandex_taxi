// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.4.0
// - protoc             v5.27.3
// source: yandex.proto

package genprotos

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.62.0 or later.
const _ = grpc.SupportPackageIsVersion8

const (
	TaxiCoordinatesService_GetTaxiCoordinatesById_FullMethodName = "/TaxiCoordinatesService/GetTaxiCoordinatesById"
)

// TaxiCoordinatesServiceClient is the clgen-service-protosient API for TaxiCoordinatesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type TaxiCoordinatesServiceClient interface {
	GetTaxiCoordinatesById(ctx context.Context, in *GetTaxiCoordinatesByIdRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type taxiCoordinatesServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTaxiCoordinatesServiceClient(cc grpc.ClientConnInterface) TaxiCoordinatesServiceClient {
	return &taxiCoordinatesServiceClient{cc}
}

func (c *taxiCoordinatesServiceClient) GetTaxiCoordinatesById(ctx context.Context, in *GetTaxiCoordinatesByIdRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, TaxiCoordinatesService_GetTaxiCoordinatesById_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TaxiCoordinatesServiceServer is the server API for TaxiCoordinatesService service.
// All implementations must embed UnimplementedTaxiCoordinatesServiceServer
// for forward compatibility
type TaxiCoordinatesServiceServer interface {
	GetTaxiCoordinatesById(context.Context, *GetTaxiCoordinatesByIdRequest) (*emptypb.Empty, error)
	mustEmbedUnimplementedTaxiCoordinatesServiceServer()
}

// UnimplementedTaxiCoordinatesServiceServer must be embedded to have forward compatible implementations.
type UnimplementedTaxiCoordinatesServiceServer struct {
}

func (UnimplementedTaxiCoordinatesServiceServer) GetTaxiCoordinatesById(context.Context, *GetTaxiCoordinatesByIdRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTaxiCoordinatesById not implemented")
}
func (UnimplementedTaxiCoordinatesServiceServer) mustEmbedUnimplementedTaxiCoordinatesServiceServer() {
}

// UnsafeTaxiCoordinatesServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to TaxiCoordinatesServiceServer will
// result in compilation errors.
type UnsafeTaxiCoordinatesServiceServer interface {
	mustEmbedUnimplementedTaxiCoordinatesServiceServer()
}

func RegisterTaxiCoordinatesServiceServer(s grpc.ServiceRegistrar, srv TaxiCoordinatesServiceServer) {
	s.RegisterService(&TaxiCoordinatesService_ServiceDesc, srv)
}

func _TaxiCoordinatesService_GetTaxiCoordinatesById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTaxiCoordinatesByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaxiCoordinatesServiceServer).GetTaxiCoordinatesById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: TaxiCoordinatesService_GetTaxiCoordinatesById_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaxiCoordinatesServiceServer).GetTaxiCoordinatesById(ctx, req.(*GetTaxiCoordinatesByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// TaxiCoordinatesService_ServiceDesc is the grpc.ServiceDesc for TaxiCoordinatesService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var TaxiCoordinatesService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "TaxiCoordinatesService",
	HandlerType: (*TaxiCoordinatesServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTaxiCoordinatesById",
			Handler:    _TaxiCoordinatesService_GetTaxiCoordinatesById_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "yandex.proto",
}
